package generated;

import org.springframework.context.MessageSource;
import org.springframework.context.MessageSourceAware;
import org.springframework.stereotype.Component;

import com.company.project.util.I18nNamedMessageResolver;

//
// auto generated by Build.java, Please do not modify it directly.
// 
// if has error, you can delete this file.
//
@Component
public class I18nKeys implements MessageSourceAware{

	public static I18nNamedMessageResolver messageSource;

	@Override
	public void setMessageSource(MessageSource value) {
		messageSource = new I18nNamedMessageResolver(value);
	}



	// en: invalid credit card number
	// zh_CN: 请输入有效的信用卡
	public static String i18n_javax_validation_constraints_CreditCardNumber_message = "javax.validation.constraints.CreditCardNumber.message";

	// en: size must be between {min} and {max}
	// zh_CN: 大小必须在 {min} 至 {max} 之间
	public static String i18n_javax_validation_constraints_Size_message = "javax.validation.constraints.Size.message";

	// en: invalid credit card number
	// zh_CN: 请输入有效的信用卡
	public static String i18n_org_hibernate_validator_constraints_CreditCardNumber_message = "org.hibernate.validator.constraints.CreditCardNumber.message";

	// en: numeric value out of bounds (<{integer} digits>.<{fraction} digits> expected)
	// zh_CN: 数值超出范围,整数位最长为{integer}及保留{fraction}小数位
	public static String i18n_javax_validation_constraints_Digits_message = "javax.validation.constraints.Digits.message";

	// en: length must be between {min} and {max}
	// zh_CN: 长度必须在 {min} 至 {max} 之间
	public static String i18n_javax_validation_constraints_Length_message = "javax.validation.constraints.Length.message";

	// en: must be less than or equal to {value}
	// zh_CN: 必须小于或等于 {value}
	public static String i18n_javax_validation_constraints_Max_message = "javax.validation.constraints.Max.message";

	// en: must be a valid URL
	// zh_CN: 请输入有效的URL
	public static String i18n_javax_validation_constraints_URL_message = "javax.validation.constraints.URL.message";

	// en: may not be empty
	// zh_CN: 请输入值
	public static String i18n_javax_validation_constraints_NotBlank_message = "javax.validation.constraints.NotBlank.message";

	// en: length must be between {min} and {max}
	// zh_CN: 长度必须在 {min} 至 {max} 之间
	public static String i18n_org_hibernate_validator_constraints_Length_message = "org.hibernate.validator.constraints.Length.message";

	// en: may not be empty
	// zh_CN: 请输入值
	public static String i18n_javax_validation_constraints_NotEmpty_message = "javax.validation.constraints.NotEmpty.message";

	// en: must be greater than or equal to {value}
	// zh_CN: 必须大于或等于 {value}
	public static String i18n_javax_validation_constraints_Min_message = "javax.validation.constraints.Min.message";

	// en: must match "{regexp}"
	// zh_CN: 不匹配合法值
	public static String i18n_javax_validation_constraints_Pattern_message = "javax.validation.constraints.Pattern.message";

	// en: must be between {min} and {max}
	// zh_CN: 必须在 {min} 至 {max} 之间
	public static String i18n_org_hibernate_validator_constraints_Range_message = "org.hibernate.validator.constraints.Range.message";

	// en: must be in the future
	// zh_CN: 必须大于当前时间
	public static String i18n_javax_validation_constraints_Future_message = "javax.validation.constraints.Future.message";

	// en: not a well-formed email address
	// zh_CN: 不是合法的邮件地址
	public static String i18n_javax_validation_constraints_Email_message = "javax.validation.constraints.Email.message";

	// en: script expression "{script}" didn't evaluate to true
	// zh_CN: 表达式 "{script}" 不是为真
	public static String i18n_javax_validation_constraints_ScriptAssert_message = "javax.validation.constraints.ScriptAssert.message";

	// en: must be a valid URL
	// zh_CN: 请输入有效的URL
	public static String i18n_org_hibernate_validator_constraints_URL_message = "org.hibernate.validator.constraints.URL.message";

	// en: must be less than or equal to {value}
	// zh_CN: 必须小于或等于 {value}
	public static String i18n_javax_validation_constraints_DecimalMax_message = "javax.validation.constraints.DecimalMax.message";

	// en: may not be null
	// zh_CN: 请输入值
	public static String i18n_javax_validation_constraints_NotNull_message = "javax.validation.constraints.NotNull.message";

	// en: must be greater than or equal to {value}
	// zh_CN: 必须大于或等于 {value}
	public static String i18n_javax_validation_constraints_DecimalMin_message = "javax.validation.constraints.DecimalMin.message";

	// en: must be true
	// zh_CN: 必须为真
	public static String i18n_javax_validation_constraints_AssertTrue_message = "javax.validation.constraints.AssertTrue.message";

	// en: script expression "{script}" didn't evaluate to true
	// zh_CN: 表达式 "{script}" 不是为真
	public static String i18n_org_hibernate_validator_constraints_ScriptAssert_message = "org.hibernate.validator.constraints.ScriptAssert.message";

	// en: must be false
	// zh_CN: 必须为假
	public static String i18n_javax_validation_constraints_AssertFalse_message = "javax.validation.constraints.AssertFalse.message";

	// en: must be null
	// zh_CN: 必须为空
	public static String i18n_javax_validation_constraints_Null_message = "javax.validation.constraints.Null.message";

	// en: must be in the past
	// zh_CN: 必须小于当前时间
	public static String i18n_javax_validation_constraints_Past_message = "javax.validation.constraints.Past.message";

	// en: may not be empty
	// zh_CN: 请输入值
	public static String i18n_org_hibernate_validator_constraints_NotEmpty_message = "org.hibernate.validator.constraints.NotEmpty.message";

	// en: may not be empty
	// zh_CN: 请输入值
	public static String i18n_org_hibernate_validator_constraints_NotBlank_message = "org.hibernate.validator.constraints.NotBlank.message";

	// en: not a well-formed email address
	// zh_CN: 不是合法的邮件地址
	public static String i18n_org_hibernate_validator_constraints_Email_message = "org.hibernate.validator.constraints.Email.message";

	// en: must be between {min} and {max}
	// zh_CN: 必须在 {min} 至 {max} 之间
	public static String i18n_javax_validation_constraints_Range_message = "javax.validation.constraints.Range.message";


	// en: invalid credit card number
	// zh_CN: 请输入有效的信用卡
	public static String i18n_javax_validation_constraints_CreditCardNumber_message(){
		String[] params = new String[]{};
		return messageSource.getNamedMessage(i18n_javax_validation_constraints_CreditCardNumber_message,params);
	}

	// en: size must be between {min} and {max}
	// zh_CN: 大小必须在 {min} 至 {max} 之间
	public static String i18n_javax_validation_constraints_Size_message(String max,String min){
		String[] params = new String[]{"max",max,"min",min};
		return messageSource.getNamedMessage(i18n_javax_validation_constraints_Size_message,params);
	}

	// en: invalid credit card number
	// zh_CN: 请输入有效的信用卡
	public static String i18n_org_hibernate_validator_constraints_CreditCardNumber_message(){
		String[] params = new String[]{};
		return messageSource.getNamedMessage(i18n_org_hibernate_validator_constraints_CreditCardNumber_message,params);
	}

	// en: numeric value out of bounds (<{integer} digits>.<{fraction} digits> expected)
	// zh_CN: 数值超出范围,整数位最长为{integer}及保留{fraction}小数位
	public static String i18n_javax_validation_constraints_Digits_message(String integer,String fraction){
		String[] params = new String[]{"integer",integer,"fraction",fraction};
		return messageSource.getNamedMessage(i18n_javax_validation_constraints_Digits_message,params);
	}

	// en: length must be between {min} and {max}
	// zh_CN: 长度必须在 {min} 至 {max} 之间
	public static String i18n_javax_validation_constraints_Length_message(String max,String min){
		String[] params = new String[]{"max",max,"min",min};
		return messageSource.getNamedMessage(i18n_javax_validation_constraints_Length_message,params);
	}

	// en: must be less than or equal to {value}
	// zh_CN: 必须小于或等于 {value}
	public static String i18n_javax_validation_constraints_Max_message(String value){
		String[] params = new String[]{"value",value};
		return messageSource.getNamedMessage(i18n_javax_validation_constraints_Max_message,params);
	}

	// en: must be a valid URL
	// zh_CN: 请输入有效的URL
	public static String i18n_javax_validation_constraints_URL_message(){
		String[] params = new String[]{};
		return messageSource.getNamedMessage(i18n_javax_validation_constraints_URL_message,params);
	}

	// en: may not be empty
	// zh_CN: 请输入值
	public static String i18n_javax_validation_constraints_NotBlank_message(){
		String[] params = new String[]{};
		return messageSource.getNamedMessage(i18n_javax_validation_constraints_NotBlank_message,params);
	}

	// en: length must be between {min} and {max}
	// zh_CN: 长度必须在 {min} 至 {max} 之间
	public static String i18n_org_hibernate_validator_constraints_Length_message(String max,String min){
		String[] params = new String[]{"max",max,"min",min};
		return messageSource.getNamedMessage(i18n_org_hibernate_validator_constraints_Length_message,params);
	}

	// en: may not be empty
	// zh_CN: 请输入值
	public static String i18n_javax_validation_constraints_NotEmpty_message(){
		String[] params = new String[]{};
		return messageSource.getNamedMessage(i18n_javax_validation_constraints_NotEmpty_message,params);
	}

	// en: must be greater than or equal to {value}
	// zh_CN: 必须大于或等于 {value}
	public static String i18n_javax_validation_constraints_Min_message(String value){
		String[] params = new String[]{"value",value};
		return messageSource.getNamedMessage(i18n_javax_validation_constraints_Min_message,params);
	}

	// en: must match "{regexp}"
	// zh_CN: 不匹配合法值
	public static String i18n_javax_validation_constraints_Pattern_message(String regexp){
		String[] params = new String[]{"regexp",regexp};
		return messageSource.getNamedMessage(i18n_javax_validation_constraints_Pattern_message,params);
	}

	// en: must be between {min} and {max}
	// zh_CN: 必须在 {min} 至 {max} 之间
	public static String i18n_org_hibernate_validator_constraints_Range_message(String max,String min){
		String[] params = new String[]{"max",max,"min",min};
		return messageSource.getNamedMessage(i18n_org_hibernate_validator_constraints_Range_message,params);
	}

	// en: must be in the future
	// zh_CN: 必须大于当前时间
	public static String i18n_javax_validation_constraints_Future_message(){
		String[] params = new String[]{};
		return messageSource.getNamedMessage(i18n_javax_validation_constraints_Future_message,params);
	}

	// en: not a well-formed email address
	// zh_CN: 不是合法的邮件地址
	public static String i18n_javax_validation_constraints_Email_message(){
		String[] params = new String[]{};
		return messageSource.getNamedMessage(i18n_javax_validation_constraints_Email_message,params);
	}

	// en: script expression "{script}" didn't evaluate to true
	// zh_CN: 表达式 "{script}" 不是为真
	public static String i18n_javax_validation_constraints_ScriptAssert_message(String script){
		String[] params = new String[]{"script",script};
		return messageSource.getNamedMessage(i18n_javax_validation_constraints_ScriptAssert_message,params);
	}

	// en: must be a valid URL
	// zh_CN: 请输入有效的URL
	public static String i18n_org_hibernate_validator_constraints_URL_message(){
		String[] params = new String[]{};
		return messageSource.getNamedMessage(i18n_org_hibernate_validator_constraints_URL_message,params);
	}

	// en: must be less than or equal to {value}
	// zh_CN: 必须小于或等于 {value}
	public static String i18n_javax_validation_constraints_DecimalMax_message(String value){
		String[] params = new String[]{"value",value};
		return messageSource.getNamedMessage(i18n_javax_validation_constraints_DecimalMax_message,params);
	}

	// en: may not be null
	// zh_CN: 请输入值
	public static String i18n_javax_validation_constraints_NotNull_message(){
		String[] params = new String[]{};
		return messageSource.getNamedMessage(i18n_javax_validation_constraints_NotNull_message,params);
	}

	// en: must be greater than or equal to {value}
	// zh_CN: 必须大于或等于 {value}
	public static String i18n_javax_validation_constraints_DecimalMin_message(String value){
		String[] params = new String[]{"value",value};
		return messageSource.getNamedMessage(i18n_javax_validation_constraints_DecimalMin_message,params);
	}

	// en: must be true
	// zh_CN: 必须为真
	public static String i18n_javax_validation_constraints_AssertTrue_message(){
		String[] params = new String[]{};
		return messageSource.getNamedMessage(i18n_javax_validation_constraints_AssertTrue_message,params);
	}

	// en: script expression "{script}" didn't evaluate to true
	// zh_CN: 表达式 "{script}" 不是为真
	public static String i18n_org_hibernate_validator_constraints_ScriptAssert_message(String script){
		String[] params = new String[]{"script",script};
		return messageSource.getNamedMessage(i18n_org_hibernate_validator_constraints_ScriptAssert_message,params);
	}

	// en: must be false
	// zh_CN: 必须为假
	public static String i18n_javax_validation_constraints_AssertFalse_message(){
		String[] params = new String[]{};
		return messageSource.getNamedMessage(i18n_javax_validation_constraints_AssertFalse_message,params);
	}

	// en: must be null
	// zh_CN: 必须为空
	public static String i18n_javax_validation_constraints_Null_message(){
		String[] params = new String[]{};
		return messageSource.getNamedMessage(i18n_javax_validation_constraints_Null_message,params);
	}

	// en: must be in the past
	// zh_CN: 必须小于当前时间
	public static String i18n_javax_validation_constraints_Past_message(){
		String[] params = new String[]{};
		return messageSource.getNamedMessage(i18n_javax_validation_constraints_Past_message,params);
	}

	// en: may not be empty
	// zh_CN: 请输入值
	public static String i18n_org_hibernate_validator_constraints_NotEmpty_message(){
		String[] params = new String[]{};
		return messageSource.getNamedMessage(i18n_org_hibernate_validator_constraints_NotEmpty_message,params);
	}

	// en: may not be empty
	// zh_CN: 请输入值
	public static String i18n_org_hibernate_validator_constraints_NotBlank_message(){
		String[] params = new String[]{};
		return messageSource.getNamedMessage(i18n_org_hibernate_validator_constraints_NotBlank_message,params);
	}

	// en: not a well-formed email address
	// zh_CN: 不是合法的邮件地址
	public static String i18n_org_hibernate_validator_constraints_Email_message(){
		String[] params = new String[]{};
		return messageSource.getNamedMessage(i18n_org_hibernate_validator_constraints_Email_message,params);
	}

	// en: must be between {min} and {max}
	// zh_CN: 必须在 {min} 至 {max} 之间
	public static String i18n_javax_validation_constraints_Range_message(String max,String min){
		String[] params = new String[]{"max",max,"min",min};
		return messageSource.getNamedMessage(i18n_javax_validation_constraints_Range_message,params);
	}
}